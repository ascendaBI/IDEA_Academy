2025-07-15 11:45:50,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:45:50,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:45:50,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:45:50,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:46:36,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:46:36,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:46:36,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:46:36,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:52:10,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:52:10,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:52:10,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:52:10,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:53:22,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:53:22,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:53:22,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:53:22,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:54:00,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:54:00,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:54:00,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:54:00,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:55:33,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:55:33,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:55:33,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:55:33,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:55:42,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:55:42,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:55:42,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:55:42,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:56:46,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:56:46,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:56:46,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:56:46,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:58:33,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:58:33,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:58:33,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:58:33,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:59:33,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:59:33,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:59:33,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 11:59:33,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:00:31,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:00:31,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:00:31,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:00:31,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:01:54,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:01:54,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:01:54,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:01:54,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:02:41,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:02:41,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:02:41,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:02:41,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:02:45,050:INFO:PyCaret ClassificationExperiment
2025-07-15 12:02:45,050:INFO:Logging name: clf-default-name
2025-07-15 12:02:45,050:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-15 12:02:45,050:INFO:version 3.3.2
2025-07-15 12:02:45,050:INFO:Initializing setup()
2025-07-15 12:02:45,050:INFO:self.USI: dbc9
2025-07-15 12:02:45,050:INFO:self._variable_keys: {'log_plots_param', 'memory', 'y_test', 'fold_groups_param', 'fold_generator', 'y', 'fold_shuffle_param', 'X', 'y_train', 'logging_param', 'idx', 'is_multiclass', 'seed', 'gpu_n_jobs_param', 'data', 'X_test', 'html_param', 'gpu_param', '_ml_usecase', 'target_param', 'exp_name_log', 'fix_imbalance', '_available_plots', 'pipeline', 'X_train', 'n_jobs_param', 'exp_id', 'USI'}
2025-07-15 12:02:45,050:INFO:Checking environment
2025-07-15 12:02:45,050:INFO:python_version: 3.10.0
2025-07-15 12:02:45,050:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2025-07-15 12:02:45,050:INFO:machine: AMD64
2025-07-15 12:02:45,066:INFO:platform: Windows-10-10.0.26100-SP0
2025-07-15 12:02:45,069:INFO:Memory: svmem(total=17133772800, available=6140764160, percent=64.2, used=10993008640, free=6140764160)
2025-07-15 12:02:45,069:INFO:Physical Core: 4
2025-07-15 12:02:45,069:INFO:Logical Core: 8
2025-07-15 12:02:45,069:INFO:Checking libraries
2025-07-15 12:02:45,069:INFO:System:
2025-07-15 12:02:45,069:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2025-07-15 12:02:45,069:INFO:executable: D:\Projet_IDEA\idea_project\Scripts\python.exe
2025-07-15 12:02:45,069:INFO:   machine: Windows-10-10.0.26100-SP0
2025-07-15 12:02:45,069:INFO:PyCaret required dependencies:
2025-07-15 12:02:49,188:INFO:                 pip: 21.2.3
2025-07-15 12:02:49,188:INFO:          setuptools: 57.4.0
2025-07-15 12:02:49,188:INFO:             pycaret: 3.3.2
2025-07-15 12:02:49,188:INFO:             IPython: 8.37.0
2025-07-15 12:02:49,188:INFO:          ipywidgets: 8.1.7
2025-07-15 12:02:49,188:INFO:                tqdm: 4.67.1
2025-07-15 12:02:49,188:INFO:               numpy: 1.26.4
2025-07-15 12:02:49,188:INFO:              pandas: 2.1.4
2025-07-15 12:02:49,188:INFO:              jinja2: 3.1.6
2025-07-15 12:02:49,188:INFO:               scipy: 1.11.4
2025-07-15 12:02:49,188:INFO:              joblib: 1.3.2
2025-07-15 12:02:49,188:INFO:             sklearn: 1.4.2
2025-07-15 12:02:49,188:INFO:                pyod: 2.0.5
2025-07-15 12:02:49,188:INFO:            imblearn: 0.13.0
2025-07-15 12:02:49,188:INFO:   category_encoders: 2.7.0
2025-07-15 12:02:49,188:INFO:            lightgbm: 4.6.0
2025-07-15 12:02:49,188:INFO:               numba: 0.61.0
2025-07-15 12:02:49,188:INFO:            requests: 2.32.4
2025-07-15 12:02:49,188:INFO:          matplotlib: 3.7.5
2025-07-15 12:02:49,188:INFO:          scikitplot: 0.3.7
2025-07-15 12:02:49,188:INFO:         yellowbrick: 1.5
2025-07-15 12:02:49,188:INFO:              plotly: 5.24.1
2025-07-15 12:02:49,188:INFO:    plotly-resampler: Not installed
2025-07-15 12:02:49,188:INFO:             kaleido: 1.0.0
2025-07-15 12:02:49,188:INFO:           schemdraw: 0.15
2025-07-15 12:02:49,188:INFO:         statsmodels: 0.14.5
2025-07-15 12:02:49,188:INFO:              sktime: 0.26.0
2025-07-15 12:02:49,188:INFO:               tbats: 1.1.3
2025-07-15 12:02:49,188:INFO:            pmdarima: 2.0.4
2025-07-15 12:02:49,188:INFO:              psutil: 7.0.0
2025-07-15 12:02:49,188:INFO:          markupsafe: 3.0.2
2025-07-15 12:02:49,188:INFO:             pickle5: Not installed
2025-07-15 12:02:49,188:INFO:         cloudpickle: 3.1.1
2025-07-15 12:02:49,188:INFO:         deprecation: 2.1.0
2025-07-15 12:02:49,188:INFO:              xxhash: 3.5.0
2025-07-15 12:02:49,188:INFO:           wurlitzer: Not installed
2025-07-15 12:02:49,188:INFO:PyCaret optional dependencies:
2025-07-15 12:03:19,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:03:19,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:03:19,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:03:19,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 12:03:22,192:INFO:PyCaret ClassificationExperiment
2025-07-15 12:03:22,192:INFO:Logging name: clf-default-name
2025-07-15 12:03:22,192:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-15 12:03:22,192:INFO:version 3.3.2
2025-07-15 12:03:22,192:INFO:Initializing setup()
2025-07-15 12:03:22,192:INFO:self.USI: f345
2025-07-15 12:03:22,192:INFO:self._variable_keys: {'X_train', 'y', 'gpu_param', 'X_test', 'y_test', 'n_jobs_param', 'exp_id', 'logging_param', 'memory', 'is_multiclass', 'log_plots_param', '_available_plots', 'exp_name_log', 'X', 'html_param', 'seed', 'idx', 'fold_shuffle_param', '_ml_usecase', 'USI', 'data', 'fold_groups_param', 'target_param', 'pipeline', 'fix_imbalance', 'gpu_n_jobs_param', 'fold_generator', 'y_train'}
2025-07-15 12:03:22,192:INFO:Checking environment
2025-07-15 12:03:22,192:INFO:python_version: 3.10.0
2025-07-15 12:03:22,192:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2025-07-15 12:03:22,192:INFO:machine: AMD64
2025-07-15 12:03:22,205:INFO:platform: Windows-10-10.0.26100-SP0
2025-07-15 12:03:22,208:INFO:Memory: svmem(total=17133772800, available=6118629376, percent=64.3, used=11015143424, free=6118629376)
2025-07-15 12:03:22,208:INFO:Physical Core: 4
2025-07-15 12:03:22,208:INFO:Logical Core: 8
2025-07-15 12:03:22,208:INFO:Checking libraries
2025-07-15 12:03:22,208:INFO:System:
2025-07-15 12:03:22,208:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2025-07-15 12:03:22,208:INFO:executable: D:\Projet_IDEA\idea_project\Scripts\python.exe
2025-07-15 12:03:22,208:INFO:   machine: Windows-10-10.0.26100-SP0
2025-07-15 12:03:22,208:INFO:PyCaret required dependencies:
2025-07-15 12:03:23,007:INFO:                 pip: 21.2.3
2025-07-15 12:03:23,007:INFO:          setuptools: 57.4.0
2025-07-15 12:03:23,007:INFO:             pycaret: 3.3.2
2025-07-15 12:03:23,007:INFO:             IPython: 8.37.0
2025-07-15 12:03:23,007:INFO:          ipywidgets: 8.1.7
2025-07-15 12:03:23,007:INFO:                tqdm: 4.67.1
2025-07-15 12:03:23,007:INFO:               numpy: 1.26.4
2025-07-15 12:03:23,007:INFO:              pandas: 2.1.4
2025-07-15 12:03:23,007:INFO:              jinja2: 3.1.6
2025-07-15 12:03:23,007:INFO:               scipy: 1.11.4
2025-07-15 12:03:23,007:INFO:              joblib: 1.3.2
2025-07-15 12:03:23,007:INFO:             sklearn: 1.4.2
2025-07-15 12:03:23,007:INFO:                pyod: 2.0.5
2025-07-15 12:03:23,007:INFO:            imblearn: 0.13.0
2025-07-15 12:03:23,007:INFO:   category_encoders: 2.7.0
2025-07-15 12:03:23,007:INFO:            lightgbm: 4.6.0
2025-07-15 12:03:23,007:INFO:               numba: 0.61.0
2025-07-15 12:03:23,007:INFO:            requests: 2.32.4
2025-07-15 12:03:23,007:INFO:          matplotlib: 3.7.5
2025-07-15 12:03:23,007:INFO:          scikitplot: 0.3.7
2025-07-15 12:03:23,007:INFO:         yellowbrick: 1.5
2025-07-15 12:03:23,007:INFO:              plotly: 5.24.1
2025-07-15 12:03:23,007:INFO:    plotly-resampler: Not installed
2025-07-15 12:03:23,007:INFO:             kaleido: 1.0.0
2025-07-15 12:03:23,007:INFO:           schemdraw: 0.15
2025-07-15 12:03:23,007:INFO:         statsmodels: 0.14.5
2025-07-15 12:03:23,007:INFO:              sktime: 0.26.0
2025-07-15 12:03:23,007:INFO:               tbats: 1.1.3
2025-07-15 12:03:23,007:INFO:            pmdarima: 2.0.4
2025-07-15 12:03:23,007:INFO:              psutil: 7.0.0
2025-07-15 12:03:23,007:INFO:          markupsafe: 3.0.2
2025-07-15 12:03:23,007:INFO:             pickle5: Not installed
2025-07-15 12:03:23,007:INFO:         cloudpickle: 3.1.1
2025-07-15 12:03:23,007:INFO:         deprecation: 2.1.0
2025-07-15 12:03:23,007:INFO:              xxhash: 3.5.0
2025-07-15 12:03:23,007:INFO:           wurlitzer: Not installed
2025-07-15 12:03:23,007:INFO:PyCaret optional dependencies:
2025-07-15 12:04:14,680:INFO:                shap: 0.44.1
2025-07-15 12:04:14,680:INFO:           interpret: 0.7.0
2025-07-15 12:04:14,680:INFO:                umap: 0.5.7
2025-07-15 12:04:14,680:INFO:     ydata_profiling: 4.16.1
2025-07-15 12:04:14,680:INFO:  explainerdashboard: 0.5.1
2025-07-15 12:04:14,680:INFO:             autoviz: Not installed
2025-07-15 12:04:14,680:INFO:           fairlearn: 0.7.0
2025-07-15 12:04:14,680:INFO:          deepchecks: Not installed
2025-07-15 12:04:14,680:INFO:             xgboost: 3.0.2
2025-07-15 12:04:14,680:INFO:            catboost: 1.2.8
2025-07-15 12:04:14,680:INFO:              kmodes: 0.12.2
2025-07-15 12:04:14,680:INFO:             mlxtend: 0.23.4
2025-07-15 12:04:14,680:INFO:       statsforecast: 1.5.0
2025-07-15 12:04:14,680:INFO:        tune_sklearn: Not installed
2025-07-15 12:04:14,680:INFO:                 ray: Not installed
2025-07-15 12:04:14,680:INFO:            hyperopt: 0.2.7
2025-07-15 12:04:14,680:INFO:              optuna: 4.4.0
2025-07-15 12:04:14,680:INFO:               skopt: 0.10.2
2025-07-15 12:04:14,680:INFO:              mlflow: 3.1.1
2025-07-15 12:04:14,680:INFO:              gradio: 5.37.0
2025-07-15 12:04:14,680:INFO:             fastapi: 0.116.1
2025-07-15 12:04:14,680:INFO:             uvicorn: 0.35.0
2025-07-15 12:04:14,680:INFO:              m2cgen: 0.10.0
2025-07-15 12:04:14,680:INFO:           evidently: 0.4.40
2025-07-15 12:04:14,680:INFO:               fugue: 0.8.7
2025-07-15 12:04:14,680:INFO:           streamlit: Not installed
2025-07-15 12:04:14,680:INFO:             prophet: Not installed
2025-07-15 12:04:14,680:INFO:None
2025-07-15 12:04:14,680:INFO:Set up data.
2025-07-15 12:04:14,696:INFO:Set up folding strategy.
2025-07-15 12:04:14,696:INFO:Set up train/test split.
2025-07-15 12:04:14,696:INFO:Set up index.
2025-07-15 12:04:14,696:INFO:Assigning column types.
2025-07-15 12:04:14,712:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-15 12:04:14,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-15 12:04:14,766:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-15 12:04:14,802:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 12:04:14,804:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 12:05:03,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-15 12:05:03,030:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-15 12:05:03,061:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 12:05:03,065:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 12:05:03,067:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-15 12:05:03,117:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-15 12:05:03,146:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 12:05:03,148:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 12:05:03,197:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-15 12:05:03,232:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 12:05:03,236:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 12:05:03,236:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-15 12:05:03,321:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 12:05:03,324:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 12:05:03,397:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 12:05:03,397:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 12:05:03,397:INFO:Preparing preprocessing pipeline...
2025-07-15 12:05:03,413:INFO:Set up label encoding.
2025-07-15 12:05:03,413:INFO:Set up simple imputation.
2025-07-15 12:05:03,413:INFO:Set up encoding of ordinal features.
2025-07-15 12:05:03,426:INFO:Set up encoding of categorical features.
2025-07-15 12:05:03,428:INFO:Set up column name cleaning.
2025-07-15 12:05:03,905:INFO:Finished creating preprocessing pipeline.
2025-07-15 12:05:03,968:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\elves\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance Fr...
                 TransformerWrapper(exclude=None, include=['emp no'],
                                    transformer=TargetEncoder(cols=['emp no'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-15 12:05:03,968:INFO:Creating final display dataframe.
2025-07-15 12:05:04,781:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         Attrition
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (1470, 41)
5        Transformed data shape        (1470, 68)
6   Transformed train set shape        (1029, 68)
7    Transformed test set shape         (441, 68)
8              Numeric features                28
9          Categorical features                12
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              f345
2025-07-15 12:05:04,864:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 12:05:04,864:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 12:05:04,943:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 12:05:04,943:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 12:05:04,943:INFO:setup() successfully completed in 102.77s...............
2025-07-15 12:05:04,943:INFO:Initializing compare_models()
2025-07-15 12:05:04,943:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-07-15 12:05:04,943:INFO:Checking exceptions
2025-07-15 12:05:04,959:INFO:Preparing display monitor
2025-07-15 12:05:04,959:INFO:Initializing Logistic Regression
2025-07-15 12:05:04,959:INFO:Total runtime is 0.0 minutes
2025-07-15 12:05:04,959:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:04,959:INFO:Initializing create_model()
2025-07-15 12:05:04,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:04,959:INFO:Checking exceptions
2025-07-15 12:05:04,959:INFO:Importing libraries
2025-07-15 12:05:04,959:INFO:Copying training dataset
2025-07-15 12:05:04,975:INFO:Defining folds
2025-07-15 12:05:04,975:INFO:Declaring metric variables
2025-07-15 12:05:04,975:INFO:Importing untrained model
2025-07-15 12:05:04,975:INFO:Logistic Regression Imported successfully
2025-07-15 12:05:04,975:INFO:Starting cross validation
2025-07-15 12:05:04,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:14,229:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:14,239:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:14,308:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:14,356:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:14,358:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:14,367:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,372:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,374:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,377:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,379:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,383:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,441:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,449:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,455:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,492:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:14,494:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,498:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,502:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,504:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,508:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,510:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,530:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:14,635:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,639:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,645:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,670:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,676:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,681:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:14,983:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:14,987:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:15,052:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,055:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,056:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,058:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,058:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,058:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,121:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-07-15 12:05:15,181:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,181:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,181:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,212:INFO:Calculating mean and std
2025-07-15 12:05:15,212:INFO:Creating metrics dataframe
2025-07-15 12:05:15,212:INFO:Uploading results into container
2025-07-15 12:05:15,212:INFO:Uploading model into container now
2025-07-15 12:05:15,212:INFO:_master_model_container: 1
2025-07-15 12:05:15,212:INFO:_display_container: 2
2025-07-15 12:05:15,212:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-15 12:05:15,212:INFO:create_model() successfully completed......................................
2025-07-15 12:05:15,333:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:15,333:INFO:Creating metrics dataframe
2025-07-15 12:05:15,333:INFO:Initializing K Neighbors Classifier
2025-07-15 12:05:15,333:INFO:Total runtime is 0.17289541165033975 minutes
2025-07-15 12:05:15,333:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:15,333:INFO:Initializing create_model()
2025-07-15 12:05:15,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:15,333:INFO:Checking exceptions
2025-07-15 12:05:15,333:INFO:Importing libraries
2025-07-15 12:05:15,333:INFO:Copying training dataset
2025-07-15 12:05:15,348:INFO:Defining folds
2025-07-15 12:05:15,348:INFO:Declaring metric variables
2025-07-15 12:05:15,348:INFO:Importing untrained model
2025-07-15 12:05:15,348:INFO:K Neighbors Classifier Imported successfully
2025-07-15 12:05:15,348:INFO:Starting cross validation
2025-07-15 12:05:15,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:15,817:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,823:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,828:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,832:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,838:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,844:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,848:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,854:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,858:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,913:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,919:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,925:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,929:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,935:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,939:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,941:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,947:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,951:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,953:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,955:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,957:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,960:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,961:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:15,966:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,128:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,128:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,128:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,128:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,144:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,144:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,160:INFO:Calculating mean and std
2025-07-15 12:05:16,160:INFO:Creating metrics dataframe
2025-07-15 12:05:16,160:INFO:Uploading results into container
2025-07-15 12:05:16,160:INFO:Uploading model into container now
2025-07-15 12:05:16,160:INFO:_master_model_container: 2
2025-07-15 12:05:16,160:INFO:_display_container: 2
2025-07-15 12:05:16,160:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-15 12:05:16,160:INFO:create_model() successfully completed......................................
2025-07-15 12:05:16,271:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:16,271:INFO:Creating metrics dataframe
2025-07-15 12:05:16,271:INFO:Initializing Naive Bayes
2025-07-15 12:05:16,271:INFO:Total runtime is 0.18853739102681477 minutes
2025-07-15 12:05:16,271:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:16,271:INFO:Initializing create_model()
2025-07-15 12:05:16,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:16,271:INFO:Checking exceptions
2025-07-15 12:05:16,271:INFO:Importing libraries
2025-07-15 12:05:16,271:INFO:Copying training dataset
2025-07-15 12:05:16,287:INFO:Defining folds
2025-07-15 12:05:16,287:INFO:Declaring metric variables
2025-07-15 12:05:16,287:INFO:Importing untrained model
2025-07-15 12:05:16,287:INFO:Naive Bayes Imported successfully
2025-07-15 12:05:16,287:INFO:Starting cross validation
2025-07-15 12:05:16,299:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:16,747:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,753:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,756:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,760:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,762:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,768:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,787:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,793:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,799:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,830:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,836:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,840:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,860:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,864:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,864:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,870:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,870:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,876:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,884:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,888:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,892:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,894:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,895:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:16,899:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,097:INFO:Calculating mean and std
2025-07-15 12:05:17,097:INFO:Creating metrics dataframe
2025-07-15 12:05:17,097:INFO:Uploading results into container
2025-07-15 12:05:17,097:INFO:Uploading model into container now
2025-07-15 12:05:17,097:INFO:_master_model_container: 3
2025-07-15 12:05:17,097:INFO:_display_container: 2
2025-07-15 12:05:17,097:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-15 12:05:17,097:INFO:create_model() successfully completed......................................
2025-07-15 12:05:17,213:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:17,213:INFO:Creating metrics dataframe
2025-07-15 12:05:17,213:INFO:Initializing Decision Tree Classifier
2025-07-15 12:05:17,213:INFO:Total runtime is 0.204237699508667 minutes
2025-07-15 12:05:17,213:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:17,213:INFO:Initializing create_model()
2025-07-15 12:05:17,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:17,213:INFO:Checking exceptions
2025-07-15 12:05:17,213:INFO:Importing libraries
2025-07-15 12:05:17,213:INFO:Copying training dataset
2025-07-15 12:05:17,229:INFO:Defining folds
2025-07-15 12:05:17,229:INFO:Declaring metric variables
2025-07-15 12:05:17,229:INFO:Importing untrained model
2025-07-15 12:05:17,229:INFO:Decision Tree Classifier Imported successfully
2025-07-15 12:05:17,229:INFO:Starting cross validation
2025-07-15 12:05:17,229:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:17,701:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,707:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,709:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,712:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,712:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,718:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,720:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,724:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,738:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,745:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,748:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,751:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,764:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,770:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,773:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,777:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,787:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,793:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,795:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,797:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,803:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,807:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,810:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,812:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,814:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,814:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,818:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,818:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,820:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,820:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,822:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,822:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,982:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,982:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,982:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,982:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,998:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,998:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:17,998:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:17,998:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,013:INFO:Calculating mean and std
2025-07-15 12:05:18,013:INFO:Creating metrics dataframe
2025-07-15 12:05:18,017:INFO:Uploading results into container
2025-07-15 12:05:18,017:INFO:Uploading model into container now
2025-07-15 12:05:18,017:INFO:_master_model_container: 4
2025-07-15 12:05:18,017:INFO:_display_container: 2
2025-07-15 12:05:18,017:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-07-15 12:05:18,017:INFO:create_model() successfully completed......................................
2025-07-15 12:05:18,130:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:18,130:INFO:Creating metrics dataframe
2025-07-15 12:05:18,130:INFO:Initializing SVM - Linear Kernel
2025-07-15 12:05:18,130:INFO:Total runtime is 0.21951102415720622 minutes
2025-07-15 12:05:18,130:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:18,130:INFO:Initializing create_model()
2025-07-15 12:05:18,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:18,130:INFO:Checking exceptions
2025-07-15 12:05:18,130:INFO:Importing libraries
2025-07-15 12:05:18,130:INFO:Copying training dataset
2025-07-15 12:05:18,146:INFO:Defining folds
2025-07-15 12:05:18,146:INFO:Declaring metric variables
2025-07-15 12:05:18,146:INFO:Importing untrained model
2025-07-15 12:05:18,146:INFO:SVM - Linear Kernel Imported successfully
2025-07-15 12:05:18,146:INFO:Starting cross validation
2025-07-15 12:05:18,146:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:18,642:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,648:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,656:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,674:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,677:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,679:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,683:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,687:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,687:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:18,691:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,711:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,717:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,723:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,733:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,739:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,745:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,749:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,755:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,756:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,759:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:18,761:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,764:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,765:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,765:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,772:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,774:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:18,778:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,983:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,985:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:18,987:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:18,989:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,003:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,006:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,009:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,032:INFO:Calculating mean and std
2025-07-15 12:05:19,033:INFO:Creating metrics dataframe
2025-07-15 12:05:19,036:INFO:Uploading results into container
2025-07-15 12:05:19,036:INFO:Uploading model into container now
2025-07-15 12:05:19,037:INFO:_master_model_container: 5
2025-07-15 12:05:19,037:INFO:_display_container: 2
2025-07-15 12:05:19,037:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-15 12:05:19,037:INFO:create_model() successfully completed......................................
2025-07-15 12:05:19,174:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:19,174:INFO:Creating metrics dataframe
2025-07-15 12:05:19,174:INFO:Initializing Ridge Classifier
2025-07-15 12:05:19,174:INFO:Total runtime is 0.23691558043162028 minutes
2025-07-15 12:05:19,174:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:19,174:INFO:Initializing create_model()
2025-07-15 12:05:19,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:19,174:INFO:Checking exceptions
2025-07-15 12:05:19,174:INFO:Importing libraries
2025-07-15 12:05:19,174:INFO:Copying training dataset
2025-07-15 12:05:19,174:INFO:Defining folds
2025-07-15 12:05:19,174:INFO:Declaring metric variables
2025-07-15 12:05:19,174:INFO:Importing untrained model
2025-07-15 12:05:19,190:INFO:Ridge Classifier Imported successfully
2025-07-15 12:05:19,190:INFO:Starting cross validation
2025-07-15 12:05:19,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:19,658:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,664:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,666:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,670:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,673:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,677:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,677:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,683:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,689:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,697:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,697:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,703:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,703:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,705:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,709:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,709:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,711:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,711:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,715:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,719:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,725:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,729:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,733:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,737:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,962:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,964:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,964:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,967:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,967:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,971:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:19,982:INFO:Calculating mean and std
2025-07-15 12:05:19,982:INFO:Creating metrics dataframe
2025-07-15 12:05:19,982:INFO:Uploading results into container
2025-07-15 12:05:19,982:INFO:Uploading model into container now
2025-07-15 12:05:19,982:INFO:_master_model_container: 6
2025-07-15 12:05:19,982:INFO:_display_container: 2
2025-07-15 12:05:19,982:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-07-15 12:05:19,982:INFO:create_model() successfully completed......................................
2025-07-15 12:05:20,089:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:20,089:INFO:Creating metrics dataframe
2025-07-15 12:05:20,105:INFO:Initializing Random Forest Classifier
2025-07-15 12:05:20,105:INFO:Total runtime is 0.2524301171302795 minutes
2025-07-15 12:05:20,105:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:20,105:INFO:Initializing create_model()
2025-07-15 12:05:20,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:20,105:INFO:Checking exceptions
2025-07-15 12:05:20,105:INFO:Importing libraries
2025-07-15 12:05:20,105:INFO:Copying training dataset
2025-07-15 12:05:20,105:INFO:Defining folds
2025-07-15 12:05:20,105:INFO:Declaring metric variables
2025-07-15 12:05:20,105:INFO:Importing untrained model
2025-07-15 12:05:20,105:INFO:Random Forest Classifier Imported successfully
2025-07-15 12:05:20,105:INFO:Starting cross validation
2025-07-15 12:05:20,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:21,011:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,013:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,019:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,019:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,021:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,025:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,025:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,029:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,029:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,032:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,035:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,042:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,043:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,044:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,048:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,050:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,050:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,054:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,172:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,176:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,180:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,582:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,582:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,597:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,597:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,606:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,608:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:21,629:INFO:Calculating mean and std
2025-07-15 12:05:21,629:INFO:Creating metrics dataframe
2025-07-15 12:05:21,629:INFO:Uploading results into container
2025-07-15 12:05:21,629:INFO:Uploading model into container now
2025-07-15 12:05:21,629:INFO:_master_model_container: 7
2025-07-15 12:05:21,629:INFO:_display_container: 2
2025-07-15 12:05:21,629:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-07-15 12:05:21,629:INFO:create_model() successfully completed......................................
2025-07-15 12:05:21,740:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:21,740:INFO:Creating metrics dataframe
2025-07-15 12:05:21,740:INFO:Initializing Quadratic Discriminant Analysis
2025-07-15 12:05:21,740:INFO:Total runtime is 0.27967906792958575 minutes
2025-07-15 12:05:21,740:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:21,740:INFO:Initializing create_model()
2025-07-15 12:05:21,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:21,740:INFO:Checking exceptions
2025-07-15 12:05:21,740:INFO:Importing libraries
2025-07-15 12:05:21,740:INFO:Copying training dataset
2025-07-15 12:05:21,758:INFO:Defining folds
2025-07-15 12:05:21,759:INFO:Declaring metric variables
2025-07-15 12:05:21,759:INFO:Importing untrained model
2025-07-15 12:05:21,759:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-15 12:05:21,760:INFO:Starting cross validation
2025-07-15 12:05:21,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:22,104:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,108:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,112:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,114:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,129:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,139:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,143:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,159:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,232:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,234:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,238:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,240:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,240:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,242:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,244:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,246:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,246:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,250:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,252:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,256:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,266:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,270:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,274:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,278:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,283:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,285:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,287:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,287:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,289:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,291:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,291:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,297:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,431:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,431:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 12:05:22,494:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,494:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,494:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,510:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,510:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,510:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:22,526:INFO:Calculating mean and std
2025-07-15 12:05:22,527:INFO:Creating metrics dataframe
2025-07-15 12:05:22,528:INFO:Uploading results into container
2025-07-15 12:05:22,528:INFO:Uploading model into container now
2025-07-15 12:05:22,528:INFO:_master_model_container: 8
2025-07-15 12:05:22,528:INFO:_display_container: 2
2025-07-15 12:05:22,528:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-15 12:05:22,528:INFO:create_model() successfully completed......................................
2025-07-15 12:05:22,629:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:22,629:INFO:Creating metrics dataframe
2025-07-15 12:05:22,645:INFO:Initializing Ada Boost Classifier
2025-07-15 12:05:22,645:INFO:Total runtime is 0.2947657982508341 minutes
2025-07-15 12:05:22,645:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:22,645:INFO:Initializing create_model()
2025-07-15 12:05:22,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:22,645:INFO:Checking exceptions
2025-07-15 12:05:22,645:INFO:Importing libraries
2025-07-15 12:05:22,645:INFO:Copying training dataset
2025-07-15 12:05:22,645:INFO:Defining folds
2025-07-15 12:05:22,645:INFO:Declaring metric variables
2025-07-15 12:05:22,645:INFO:Importing untrained model
2025-07-15 12:05:22,645:INFO:Ada Boost Classifier Imported successfully
2025-07-15 12:05:22,645:INFO:Starting cross validation
2025-07-15 12:05:22,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:22,987:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:22,994:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:22,994:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:23,011:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:23,021:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:23,021:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:23,027:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:23,041:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:23,117:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,122:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,122:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,124:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,128:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,128:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,130:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,134:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,134:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,150:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,150:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,154:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,155:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,155:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,157:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,158:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,160:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,160:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,162:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,163:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,165:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,165:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,172:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,172:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,312:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:23,322:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 12:05:23,372:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,372:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,372:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,372:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,387:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,387:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:23,404:INFO:Calculating mean and std
2025-07-15 12:05:23,404:INFO:Creating metrics dataframe
2025-07-15 12:05:23,404:INFO:Uploading results into container
2025-07-15 12:05:23,404:INFO:Uploading model into container now
2025-07-15 12:05:23,404:INFO:_master_model_container: 9
2025-07-15 12:05:23,404:INFO:_display_container: 2
2025-07-15 12:05:23,404:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-07-15 12:05:23,404:INFO:create_model() successfully completed......................................
2025-07-15 12:05:23,516:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:23,516:INFO:Creating metrics dataframe
2025-07-15 12:05:23,516:INFO:Initializing Gradient Boosting Classifier
2025-07-15 12:05:23,516:INFO:Total runtime is 0.30928050676981605 minutes
2025-07-15 12:05:23,516:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:23,516:INFO:Initializing create_model()
2025-07-15 12:05:23,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:23,516:INFO:Checking exceptions
2025-07-15 12:05:23,516:INFO:Importing libraries
2025-07-15 12:05:23,516:INFO:Copying training dataset
2025-07-15 12:05:23,537:INFO:Defining folds
2025-07-15 12:05:23,537:INFO:Declaring metric variables
2025-07-15 12:05:23,537:INFO:Importing untrained model
2025-07-15 12:05:23,538:INFO:Gradient Boosting Classifier Imported successfully
2025-07-15 12:05:23,538:INFO:Starting cross validation
2025-07-15 12:05:23,541:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:24,290:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,292:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,296:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,298:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,298:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,302:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,306:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,307:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,312:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,319:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,324:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,330:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,336:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,340:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,342:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,344:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,344:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,346:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,348:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,348:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,350:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,354:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,356:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,357:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,737:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,737:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,737:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,737:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,755:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,759:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:24,766:INFO:Calculating mean and std
2025-07-15 12:05:24,766:INFO:Creating metrics dataframe
2025-07-15 12:05:24,766:INFO:Uploading results into container
2025-07-15 12:05:24,766:INFO:Uploading model into container now
2025-07-15 12:05:24,766:INFO:_master_model_container: 10
2025-07-15 12:05:24,766:INFO:_display_container: 2
2025-07-15 12:05:24,766:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-15 12:05:24,766:INFO:create_model() successfully completed......................................
2025-07-15 12:05:24,872:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:24,872:INFO:Creating metrics dataframe
2025-07-15 12:05:24,888:INFO:Initializing Linear Discriminant Analysis
2025-07-15 12:05:24,888:INFO:Total runtime is 0.3321497321128845 minutes
2025-07-15 12:05:24,888:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:24,888:INFO:Initializing create_model()
2025-07-15 12:05:24,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:24,888:INFO:Checking exceptions
2025-07-15 12:05:24,888:INFO:Importing libraries
2025-07-15 12:05:24,888:INFO:Copying training dataset
2025-07-15 12:05:24,888:INFO:Defining folds
2025-07-15 12:05:24,888:INFO:Declaring metric variables
2025-07-15 12:05:24,888:INFO:Importing untrained model
2025-07-15 12:05:24,888:INFO:Linear Discriminant Analysis Imported successfully
2025-07-15 12:05:24,888:INFO:Starting cross validation
2025-07-15 12:05:24,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:25,358:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,364:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,366:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,368:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,370:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,372:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,374:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,376:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,378:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,382:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,386:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,388:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,390:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,395:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,399:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,401:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,403:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,403:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,407:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,409:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,411:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,411:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,411:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,411:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,411:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,411:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,411:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,411:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,411:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,629:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,629:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,629:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,629:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,629:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,629:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,629:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:25,629:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:25,660:INFO:Calculating mean and std
2025-07-15 12:05:25,660:INFO:Creating metrics dataframe
2025-07-15 12:05:25,660:INFO:Uploading results into container
2025-07-15 12:05:25,660:INFO:Uploading model into container now
2025-07-15 12:05:25,660:INFO:_master_model_container: 11
2025-07-15 12:05:25,660:INFO:_display_container: 2
2025-07-15 12:05:25,660:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-15 12:05:25,660:INFO:create_model() successfully completed......................................
2025-07-15 12:05:25,766:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:25,766:INFO:Creating metrics dataframe
2025-07-15 12:05:25,781:INFO:Initializing Extra Trees Classifier
2025-07-15 12:05:25,781:INFO:Total runtime is 0.3470390796661377 minutes
2025-07-15 12:05:25,781:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:25,781:INFO:Initializing create_model()
2025-07-15 12:05:25,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:25,781:INFO:Checking exceptions
2025-07-15 12:05:25,781:INFO:Importing libraries
2025-07-15 12:05:25,781:INFO:Copying training dataset
2025-07-15 12:05:25,781:INFO:Defining folds
2025-07-15 12:05:25,781:INFO:Declaring metric variables
2025-07-15 12:05:25,781:INFO:Importing untrained model
2025-07-15 12:05:25,781:INFO:Extra Trees Classifier Imported successfully
2025-07-15 12:05:25,781:INFO:Starting cross validation
2025-07-15 12:05:25,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:26,576:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,576:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,582:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,586:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,586:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,586:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,608:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,612:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,618:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,624:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,624:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,624:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,630:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,630:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,630:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,636:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,636:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,636:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,640:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,644:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,647:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,737:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,737:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:26,737:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:27,090:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:27,090:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:27,090:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:27,106:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:27,106:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:27,106:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:27,138:INFO:Calculating mean and std
2025-07-15 12:05:27,138:INFO:Creating metrics dataframe
2025-07-15 12:05:27,138:INFO:Uploading results into container
2025-07-15 12:05:27,138:INFO:Uploading model into container now
2025-07-15 12:05:27,138:INFO:_master_model_container: 12
2025-07-15 12:05:27,138:INFO:_display_container: 2
2025-07-15 12:05:27,138:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-07-15 12:05:27,138:INFO:create_model() successfully completed......................................
2025-07-15 12:05:27,245:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:27,245:INFO:Creating metrics dataframe
2025-07-15 12:05:27,245:INFO:Initializing Extreme Gradient Boosting
2025-07-15 12:05:27,245:INFO:Total runtime is 0.37143927812576294 minutes
2025-07-15 12:05:27,245:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:27,245:INFO:Initializing create_model()
2025-07-15 12:05:27,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:27,245:INFO:Checking exceptions
2025-07-15 12:05:27,245:INFO:Importing libraries
2025-07-15 12:05:27,245:INFO:Copying training dataset
2025-07-15 12:05:27,261:INFO:Defining folds
2025-07-15 12:05:27,261:INFO:Declaring metric variables
2025-07-15 12:05:27,261:INFO:Importing untrained model
2025-07-15 12:05:27,261:INFO:Extreme Gradient Boosting Imported successfully
2025-07-15 12:05:27,261:INFO:Starting cross validation
2025-07-15 12:05:27,261:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:28,498:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,498:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,499:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,499:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,501:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,501:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,503:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,503:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,503:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,503:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,505:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,505:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,507:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,509:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,509:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,509:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,509:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,511:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,513:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,515:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,516:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,522:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,790:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,790:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,790:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,790:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,790:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,790:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:28,816:INFO:Calculating mean and std
2025-07-15 12:05:28,817:INFO:Creating metrics dataframe
2025-07-15 12:05:28,819:INFO:Uploading results into container
2025-07-15 12:05:28,820:INFO:Uploading model into container now
2025-07-15 12:05:28,820:INFO:_master_model_container: 13
2025-07-15 12:05:28,820:INFO:_display_container: 2
2025-07-15 12:05:28,821:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-15 12:05:28,821:INFO:create_model() successfully completed......................................
2025-07-15 12:05:28,927:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:28,927:INFO:Creating metrics dataframe
2025-07-15 12:05:28,927:INFO:Initializing Light Gradient Boosting Machine
2025-07-15 12:05:28,927:INFO:Total runtime is 0.39946762720743817 minutes
2025-07-15 12:05:28,927:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:28,927:INFO:Initializing create_model()
2025-07-15 12:05:28,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:28,927:INFO:Checking exceptions
2025-07-15 12:05:28,927:INFO:Importing libraries
2025-07-15 12:05:28,927:INFO:Copying training dataset
2025-07-15 12:05:28,943:INFO:Defining folds
2025-07-15 12:05:28,943:INFO:Declaring metric variables
2025-07-15 12:05:28,943:INFO:Importing untrained model
2025-07-15 12:05:28,943:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-15 12:05:28,943:INFO:Starting cross validation
2025-07-15 12:05:28,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:29,714:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,714:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,720:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,720:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,720:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,722:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,724:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,726:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,726:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,726:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,730:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,732:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,893:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,899:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,903:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,917:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,923:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,929:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,973:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,978:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:29,984:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,081:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,087:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,095:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,249:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,254:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,258:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,258:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,262:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,268:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:30,282:INFO:Calculating mean and std
2025-07-15 12:05:30,282:INFO:Creating metrics dataframe
2025-07-15 12:05:30,287:INFO:Uploading results into container
2025-07-15 12:05:30,287:INFO:Uploading model into container now
2025-07-15 12:05:30,289:INFO:_master_model_container: 14
2025-07-15 12:05:30,289:INFO:_display_container: 2
2025-07-15 12:05:30,291:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-15 12:05:30,291:INFO:create_model() successfully completed......................................
2025-07-15 12:05:30,421:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:30,421:INFO:Creating metrics dataframe
2025-07-15 12:05:30,437:INFO:Initializing CatBoost Classifier
2025-07-15 12:05:30,437:INFO:Total runtime is 0.42463173866271975 minutes
2025-07-15 12:05:30,437:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:30,437:INFO:Initializing create_model()
2025-07-15 12:05:30,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:30,437:INFO:Checking exceptions
2025-07-15 12:05:30,437:INFO:Importing libraries
2025-07-15 12:05:30,437:INFO:Copying training dataset
2025-07-15 12:05:30,437:INFO:Defining folds
2025-07-15 12:05:30,437:INFO:Declaring metric variables
2025-07-15 12:05:30,437:INFO:Importing untrained model
2025-07-15 12:05:30,437:INFO:CatBoost Classifier Imported successfully
2025-07-15 12:05:30,437:INFO:Starting cross validation
2025-07-15 12:05:30,452:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:42,756:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:42,759:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:42,763:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:42,773:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:42,777:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:42,781:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:42,930:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:42,935:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:42,941:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:42,996:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,002:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,009:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,049:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,055:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,057:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,061:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,063:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,067:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,067:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,067:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,122:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,128:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:43,134:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,104:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,104:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,120:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,142:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,142:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,142:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,166:INFO:Calculating mean and std
2025-07-15 12:05:47,166:INFO:Creating metrics dataframe
2025-07-15 12:05:47,166:INFO:Uploading results into container
2025-07-15 12:05:47,166:INFO:Uploading model into container now
2025-07-15 12:05:47,166:INFO:_master_model_container: 15
2025-07-15 12:05:47,166:INFO:_display_container: 2
2025-07-15 12:05:47,166:INFO:<catboost.core.CatBoostClassifier object at 0x00000164A83ADD50>
2025-07-15 12:05:47,166:INFO:create_model() successfully completed......................................
2025-07-15 12:05:47,272:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:47,272:INFO:Creating metrics dataframe
2025-07-15 12:05:47,288:INFO:Initializing Dummy Classifier
2025-07-15 12:05:47,288:INFO:Total runtime is 0.7054874658584596 minutes
2025-07-15 12:05:47,288:INFO:SubProcess create_model() called ==================================
2025-07-15 12:05:47,288:INFO:Initializing create_model()
2025-07-15 12:05:47,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A82EEBF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:47,288:INFO:Checking exceptions
2025-07-15 12:05:47,288:INFO:Importing libraries
2025-07-15 12:05:47,288:INFO:Copying training dataset
2025-07-15 12:05:47,288:INFO:Defining folds
2025-07-15 12:05:47,288:INFO:Declaring metric variables
2025-07-15 12:05:47,288:INFO:Importing untrained model
2025-07-15 12:05:47,288:INFO:Dummy Classifier Imported successfully
2025-07-15 12:05:47,288:INFO:Starting cross validation
2025-07-15 12:05:47,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-15 12:05:47,748:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,754:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,756:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:47,760:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,765:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,771:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,771:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,776:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:47,779:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,778:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,781:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,783:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,785:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,785:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:47,787:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:47,787:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,789:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,791:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:47,791:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,793:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,803:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,807:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,807:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,809:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,811:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:47,813:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:47,815:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,816:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,839:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,843:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:47,845:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:47,847:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:48,005:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:48,005:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:48,005:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:48,005:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:48,021:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:48,026:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:48,027:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 12:05:48,029:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 12:05:48,056:INFO:Calculating mean and std
2025-07-15 12:05:48,056:INFO:Creating metrics dataframe
2025-07-15 12:05:48,058:INFO:Uploading results into container
2025-07-15 12:05:48,058:INFO:Uploading model into container now
2025-07-15 12:05:48,058:INFO:_master_model_container: 16
2025-07-15 12:05:48,058:INFO:_display_container: 2
2025-07-15 12:05:48,058:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-07-15 12:05:48,058:INFO:create_model() successfully completed......................................
2025-07-15 12:05:48,164:INFO:SubProcess create_model() end ==================================
2025-07-15 12:05:48,164:INFO:Creating metrics dataframe
2025-07-15 12:05:48,164:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-07-15 12:05:48,180:INFO:Initializing create_model()
2025-07-15 12:05:48,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164F4471390>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 12:05:48,180:INFO:Checking exceptions
2025-07-15 12:05:48,180:INFO:Importing libraries
2025-07-15 12:05:48,180:INFO:Copying training dataset
2025-07-15 12:05:48,180:INFO:Defining folds
2025-07-15 12:05:48,180:INFO:Declaring metric variables
2025-07-15 12:05:48,180:INFO:Importing untrained model
2025-07-15 12:05:48,180:INFO:Declaring custom model
2025-07-15 12:05:48,180:INFO:Ridge Classifier Imported successfully
2025-07-15 12:05:48,180:INFO:Cross validation set to False
2025-07-15 12:05:48,180:INFO:Fitting Model
2025-07-15 12:05:48,340:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-07-15 12:05:48,340:INFO:create_model() successfully completed......................................
2025-07-15 12:05:48,464:INFO:_master_model_container: 16
2025-07-15 12:05:48,464:INFO:_display_container: 2
2025-07-15 12:05:48,464:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-07-15 12:05:48,464:INFO:compare_models() successfully completed......................................
2025-07-15 12:05:48,536:INFO:Initializing save_model()
2025-07-15 12:05:48,537:INFO:save_model(model=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), model_name=D:/Projet_IDEA/specifications/models/model_attrition, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\elves\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance Fr...
                 TransformerWrapper(exclude=None, include=['emp no'],
                                    transformer=TargetEncoder(cols=['emp no'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-15 12:05:48,537:INFO:Adding model into prep_pipe
2025-07-15 12:05:48,549:INFO:D:/Projet_IDEA/specifications/models/model_attrition.pkl saved in current working directory
2025-07-15 12:05:48,613:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance From Home',
                                             'Employee Count',
                                             'Environment Sati...
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-07-15 12:05:48,613:INFO:save_model() successfully completed......................................
2025-07-15 14:44:22,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:44:22,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:44:22,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:44:22,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:44:25,583:INFO:Initializing load_model()
2025-07-15 14:44:25,583:INFO:load_model(model_name=models/model_attrition, platform=None, authentication=None, verbose=True)
2025-07-15 14:44:26,576:INFO:Initializing predict_model()
2025-07-15 14:44:26,576:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000130C66EBCA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance From Home',
                                             'Employee Count',
                                             'Environment Satisfaction',
                                             'Hourly Rate', 'Job Involvement'...
                                                                    'Job Role',
                                                                    'Marital '
                                                                    'Status',
                                                                    'Over18',
                                                                    'Education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['emp no'],
                                    transformer=TargetEncoder(cols=['emp no'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', RidgeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000130DDD27880>)
2025-07-15 14:44:26,576:INFO:Checking exceptions
2025-07-15 14:44:26,576:INFO:Preloading libraries
2025-07-15 14:44:26,576:INFO:Set up data.
2025-07-15 14:44:26,590:INFO:Set up index.
2025-07-15 14:52:17,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:52:17,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:52:17,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:52:17,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:52:20,787:INFO:Initializing load_model()
2025-07-15 14:52:20,787:INFO:load_model(model_name=models/model_attrition, platform=None, authentication=None, verbose=True)
2025-07-15 14:52:21,773:INFO:Initializing predict_model()
2025-07-15 14:52:21,789:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000240CE93BD00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance From Home',
                                             'Employee Count',
                                             'Environment Satisfaction',
                                             'Hourly Rate', 'Job Involvement'...
                                                                    'Job Role',
                                                                    'Marital '
                                                                    'Status',
                                                                    'Over18',
                                                                    'Education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['emp no'],
                                    transformer=TargetEncoder(cols=['emp no'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', RidgeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000240E5F77880>)
2025-07-15 14:52:21,789:INFO:Checking exceptions
2025-07-15 14:52:21,789:INFO:Preloading libraries
2025-07-15 14:52:21,789:INFO:Set up data.
2025-07-15 14:52:21,789:INFO:Set up index.
2025-07-15 14:54:17,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:54:17,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:54:17,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:54:17,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:54:21,204:INFO:Initializing load_model()
2025-07-15 14:54:21,204:INFO:load_model(model_name=models/model_attrition, platform=None, authentication=None, verbose=True)
2025-07-15 14:54:22,281:INFO:Initializing predict_model()
2025-07-15 14:54:22,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D90363DC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance From Home',
                                             'Employee Count',
                                             'Environment Satisfaction',
                                             'Hourly Rate', 'Job Involvement'...
                                                                    'Job Role',
                                                                    'Marital '
                                                                    'Status',
                                                                    'Over18',
                                                                    'Education'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['emp no'],
                                    transformer=TargetEncoder(cols=['emp no'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', RidgeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019DA72979A0>)
2025-07-15 14:54:22,282:INFO:Checking exceptions
2025-07-15 14:54:22,282:INFO:Preloading libraries
2025-07-15 14:54:22,282:INFO:Set up data.
2025-07-15 14:54:22,297:INFO:Set up index.
2025-07-15 14:56:41,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:56:41,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:56:41,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:56:41,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:57:45,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:57:45,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:57:45,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:57:45,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:57:49,037:INFO:PyCaret ClassificationExperiment
2025-07-15 14:57:49,037:INFO:Logging name: clf-default-name
2025-07-15 14:57:49,037:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-15 14:57:49,037:INFO:version 3.3.2
2025-07-15 14:57:49,037:INFO:Initializing setup()
2025-07-15 14:57:49,037:INFO:self.USI: 996a
2025-07-15 14:57:49,037:INFO:self._variable_keys: {'pipeline', 'USI', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'y', 'y_train', 'gpu_param', 'fold_generator', '_available_plots', 'exp_id', 'X_test', 'X', 'gpu_n_jobs_param', 'data', 'html_param', 'fold_groups_param', 'y_test', '_ml_usecase', 'memory', 'fix_imbalance', 'X_train', 'target_param', 'logging_param', 'is_multiclass', 'idx', 'exp_name_log', 'seed'}
2025-07-15 14:57:49,037:INFO:Checking environment
2025-07-15 14:57:49,037:INFO:python_version: 3.10.0
2025-07-15 14:57:49,037:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2025-07-15 14:57:49,037:INFO:machine: AMD64
2025-07-15 14:57:49,053:INFO:platform: Windows-10-10.0.26100-SP0
2025-07-15 14:57:49,053:INFO:Memory: svmem(total=17133772800, available=5684285440, percent=66.8, used=11449487360, free=5684285440)
2025-07-15 14:57:49,053:INFO:Physical Core: 4
2025-07-15 14:57:49,053:INFO:Logical Core: 8
2025-07-15 14:57:49,053:INFO:Checking libraries
2025-07-15 14:57:49,053:INFO:System:
2025-07-15 14:57:49,053:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2025-07-15 14:57:49,053:INFO:executable: D:\Projet_IDEA\idea_project\Scripts\python.exe
2025-07-15 14:57:49,053:INFO:   machine: Windows-10-10.0.26100-SP0
2025-07-15 14:57:49,053:INFO:PyCaret required dependencies:
2025-07-15 14:57:49,953:INFO:                 pip: 21.2.3
2025-07-15 14:57:49,953:INFO:          setuptools: 57.4.0
2025-07-15 14:57:49,953:INFO:             pycaret: 3.3.2
2025-07-15 14:57:49,953:INFO:             IPython: 8.37.0
2025-07-15 14:57:49,953:INFO:          ipywidgets: 8.1.7
2025-07-15 14:57:49,953:INFO:                tqdm: 4.67.1
2025-07-15 14:57:49,953:INFO:               numpy: 1.26.4
2025-07-15 14:57:49,953:INFO:              pandas: 2.1.4
2025-07-15 14:57:49,953:INFO:              jinja2: 3.1.6
2025-07-15 14:57:49,953:INFO:               scipy: 1.11.4
2025-07-15 14:57:49,953:INFO:              joblib: 1.3.2
2025-07-15 14:57:49,953:INFO:             sklearn: 1.4.2
2025-07-15 14:57:49,953:INFO:                pyod: 2.0.5
2025-07-15 14:57:49,953:INFO:            imblearn: 0.13.0
2025-07-15 14:57:49,953:INFO:   category_encoders: 2.7.0
2025-07-15 14:57:49,953:INFO:            lightgbm: 4.6.0
2025-07-15 14:57:49,953:INFO:               numba: 0.61.0
2025-07-15 14:57:49,953:INFO:            requests: 2.32.4
2025-07-15 14:57:49,953:INFO:          matplotlib: 3.7.5
2025-07-15 14:57:49,953:INFO:          scikitplot: 0.3.7
2025-07-15 14:57:49,953:INFO:         yellowbrick: 1.5
2025-07-15 14:57:49,953:INFO:              plotly: 5.24.1
2025-07-15 14:57:49,953:INFO:    plotly-resampler: Not installed
2025-07-15 14:57:49,953:INFO:             kaleido: 1.0.0
2025-07-15 14:57:49,953:INFO:           schemdraw: 0.15
2025-07-15 14:57:49,953:INFO:         statsmodels: 0.14.5
2025-07-15 14:57:49,953:INFO:              sktime: 0.26.0
2025-07-15 14:57:49,953:INFO:               tbats: 1.1.3
2025-07-15 14:57:49,953:INFO:            pmdarima: 2.0.4
2025-07-15 14:57:49,953:INFO:              psutil: 7.0.0
2025-07-15 14:57:49,953:INFO:          markupsafe: 3.0.2
2025-07-15 14:57:49,953:INFO:             pickle5: Not installed
2025-07-15 14:57:49,953:INFO:         cloudpickle: 3.1.1
2025-07-15 14:57:49,969:INFO:         deprecation: 2.1.0
2025-07-15 14:57:49,969:INFO:              xxhash: 3.5.0
2025-07-15 14:57:49,969:INFO:           wurlitzer: Not installed
2025-07-15 14:57:49,969:INFO:PyCaret optional dependencies:
2025-07-15 14:57:54,606:INFO:                shap: 0.44.1
2025-07-15 14:57:54,606:INFO:           interpret: 0.7.0
2025-07-15 14:57:54,606:INFO:                umap: 0.5.7
2025-07-15 14:57:54,606:INFO:     ydata_profiling: 4.16.1
2025-07-15 14:57:54,606:INFO:  explainerdashboard: 0.5.1
2025-07-15 14:57:54,606:INFO:             autoviz: Not installed
2025-07-15 14:57:54,606:INFO:           fairlearn: 0.7.0
2025-07-15 14:57:54,606:INFO:          deepchecks: Not installed
2025-07-15 14:57:54,606:INFO:             xgboost: 3.0.2
2025-07-15 14:57:54,606:INFO:            catboost: 1.2.8
2025-07-15 14:57:54,607:INFO:              kmodes: 0.12.2
2025-07-15 14:57:54,607:INFO:             mlxtend: 0.23.4
2025-07-15 14:57:54,607:INFO:       statsforecast: 1.5.0
2025-07-15 14:57:54,607:INFO:        tune_sklearn: Not installed
2025-07-15 14:57:54,607:INFO:                 ray: Not installed
2025-07-15 14:57:54,607:INFO:            hyperopt: 0.2.7
2025-07-15 14:57:54,607:INFO:              optuna: 4.4.0
2025-07-15 14:57:54,607:INFO:               skopt: 0.10.2
2025-07-15 14:57:54,607:INFO:              mlflow: 3.1.1
2025-07-15 14:57:54,607:INFO:              gradio: 5.37.0
2025-07-15 14:57:54,607:INFO:             fastapi: 0.116.1
2025-07-15 14:57:54,607:INFO:             uvicorn: 0.35.0
2025-07-15 14:57:54,607:INFO:              m2cgen: 0.10.0
2025-07-15 14:57:54,607:INFO:           evidently: 0.4.40
2025-07-15 14:57:54,607:INFO:               fugue: 0.8.7
2025-07-15 14:57:54,607:INFO:           streamlit: Not installed
2025-07-15 14:57:54,607:INFO:             prophet: Not installed
2025-07-15 14:57:54,607:INFO:None
2025-07-15 14:57:54,607:INFO:Set up data.
2025-07-15 14:57:54,623:INFO:Set up folding strategy.
2025-07-15 14:57:54,623:INFO:Set up train/test split.
2025-07-15 14:57:54,623:INFO:Set up index.
2025-07-15 14:57:54,623:INFO:Assigning column types.
2025-07-15 14:57:54,639:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-15 14:57:54,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-15 14:57:54,686:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-15 14:57:54,718:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 14:57:54,718:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 14:57:54,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-15 14:57:54,809:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-15 14:57:54,841:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 14:57:54,846:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 14:57:54,846:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-15 14:57:54,878:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-15 14:57:54,912:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 14:57:54,912:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 14:57:54,957:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-15 14:57:54,989:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 14:57:54,989:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 14:57:54,989:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-15 14:57:55,078:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 14:57:55,078:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 14:57:55,154:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 14:57:55,154:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 14:57:55,154:INFO:Preparing preprocessing pipeline...
2025-07-15 14:57:55,154:INFO:Set up label encoding.
2025-07-15 14:57:55,154:INFO:Set up simple imputation.
2025-07-15 14:57:55,169:INFO:Set up encoding of ordinal features.
2025-07-15 14:57:55,169:INFO:Set up encoding of categorical features.
2025-07-15 14:57:55,169:INFO:Set up feature normalization.
2025-07-15 14:57:55,169:INFO:Set up column name cleaning.
2025-07-15 14:57:55,628:INFO:Finished creating preprocessing pipeline.
2025-07-15 14:57:55,676:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\elves\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance Fr...
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-15 14:57:55,676:INFO:Creating final display dataframe.
2025-07-15 14:57:56,480:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         Attrition
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (1470, 41)
5        Transformed data shape        (1470, 68)
6   Transformed train set shape        (1029, 68)
7    Transformed test set shape         (441, 68)
8              Numeric features                28
9          Categorical features                12
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16                    Normalize              True
17             Normalize method            zscore
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              996a
2025-07-15 14:57:56,560:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 14:57:56,560:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 14:57:56,639:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-15 14:57:56,639:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-15 14:57:56,639:INFO:setup() successfully completed in 7.61s...............
2025-07-15 14:57:56,639:INFO:Initializing compare_models()
2025-07-15 14:57:56,639:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-07-15 14:57:56,639:INFO:Checking exceptions
2025-07-15 14:57:56,639:INFO:Preparing display monitor
2025-07-15 14:57:56,655:INFO:Initializing Logistic Regression
2025-07-15 14:57:56,655:INFO:Total runtime is 0.0 minutes
2025-07-15 14:57:56,655:INFO:SubProcess create_model() called ==================================
2025-07-15 14:57:56,655:INFO:Initializing create_model()
2025-07-15 14:57:56,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:57:56,655:INFO:Checking exceptions
2025-07-15 14:57:56,655:INFO:Importing libraries
2025-07-15 14:57:56,655:INFO:Copying training dataset
2025-07-15 14:57:56,655:INFO:Defining folds
2025-07-15 14:57:56,655:INFO:Declaring metric variables
2025-07-15 14:57:56,655:INFO:Importing untrained model
2025-07-15 14:57:56,655:INFO:Logistic Regression Imported successfully
2025-07-15 14:57:56,655:INFO:Starting cross validation
2025-07-15 14:57:56,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:04,854:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,861:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,868:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,882:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,890:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,892:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,896:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,896:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,900:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,904:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,906:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,939:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,947:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:04,953:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,036:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,039:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,043:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,084:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,084:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,100:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,231:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,235:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,237:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,312:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,316:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,319:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,320:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,320:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,336:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,353:INFO:Calculating mean and std
2025-07-15 14:58:05,353:INFO:Creating metrics dataframe
2025-07-15 14:58:05,356:INFO:Uploading results into container
2025-07-15 14:58:05,357:INFO:Uploading model into container now
2025-07-15 14:58:05,357:INFO:_master_model_container: 1
2025-07-15 14:58:05,357:INFO:_display_container: 2
2025-07-15 14:58:05,358:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-15 14:58:05,358:INFO:create_model() successfully completed......................................
2025-07-15 14:58:05,467:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:05,467:INFO:Creating metrics dataframe
2025-07-15 14:58:05,467:INFO:Initializing K Neighbors Classifier
2025-07-15 14:58:05,467:INFO:Total runtime is 0.14686121940612792 minutes
2025-07-15 14:58:05,467:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:05,467:INFO:Initializing create_model()
2025-07-15 14:58:05,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:05,467:INFO:Checking exceptions
2025-07-15 14:58:05,467:INFO:Importing libraries
2025-07-15 14:58:05,467:INFO:Copying training dataset
2025-07-15 14:58:05,483:INFO:Defining folds
2025-07-15 14:58:05,483:INFO:Declaring metric variables
2025-07-15 14:58:05,483:INFO:Importing untrained model
2025-07-15 14:58:05,483:INFO:K Neighbors Classifier Imported successfully
2025-07-15 14:58:05,483:INFO:Starting cross validation
2025-07-15 14:58:05,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:05,989:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,995:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:05,999:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,001:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,005:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,005:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,011:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,011:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,013:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,017:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,020:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,026:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,030:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,035:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,041:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,049:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,054:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,058:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,060:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,060:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,070:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,070:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,275:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,275:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,291:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,291:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,291:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,291:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,307:INFO:Calculating mean and std
2025-07-15 14:58:06,307:INFO:Creating metrics dataframe
2025-07-15 14:58:06,307:INFO:Uploading results into container
2025-07-15 14:58:06,307:INFO:Uploading model into container now
2025-07-15 14:58:06,307:INFO:_master_model_container: 2
2025-07-15 14:58:06,307:INFO:_display_container: 2
2025-07-15 14:58:06,307:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-15 14:58:06,307:INFO:create_model() successfully completed......................................
2025-07-15 14:58:06,425:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:06,425:INFO:Creating metrics dataframe
2025-07-15 14:58:06,425:INFO:Initializing Naive Bayes
2025-07-15 14:58:06,425:INFO:Total runtime is 0.16283690532048542 minutes
2025-07-15 14:58:06,425:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:06,425:INFO:Initializing create_model()
2025-07-15 14:58:06,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:06,425:INFO:Checking exceptions
2025-07-15 14:58:06,425:INFO:Importing libraries
2025-07-15 14:58:06,425:INFO:Copying training dataset
2025-07-15 14:58:06,441:INFO:Defining folds
2025-07-15 14:58:06,441:INFO:Declaring metric variables
2025-07-15 14:58:06,441:INFO:Importing untrained model
2025-07-15 14:58:06,441:INFO:Naive Bayes Imported successfully
2025-07-15 14:58:06,441:INFO:Starting cross validation
2025-07-15 14:58:06,441:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:06,928:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,934:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,936:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,940:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,940:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,942:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,946:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,948:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,952:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,954:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,960:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,966:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,968:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,968:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,972:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,974:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,976:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,978:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,978:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,981:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,983:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,983:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,983:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:06,983:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,219:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,223:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,225:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,227:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,231:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,232:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,248:INFO:Calculating mean and std
2025-07-15 14:58:07,248:INFO:Creating metrics dataframe
2025-07-15 14:58:07,248:INFO:Uploading results into container
2025-07-15 14:58:07,248:INFO:Uploading model into container now
2025-07-15 14:58:07,248:INFO:_master_model_container: 3
2025-07-15 14:58:07,248:INFO:_display_container: 2
2025-07-15 14:58:07,248:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-15 14:58:07,248:INFO:create_model() successfully completed......................................
2025-07-15 14:58:07,370:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:07,371:INFO:Creating metrics dataframe
2025-07-15 14:58:07,374:INFO:Initializing Decision Tree Classifier
2025-07-15 14:58:07,374:INFO:Total runtime is 0.17864815394083658 minutes
2025-07-15 14:58:07,374:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:07,374:INFO:Initializing create_model()
2025-07-15 14:58:07,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:07,374:INFO:Checking exceptions
2025-07-15 14:58:07,374:INFO:Importing libraries
2025-07-15 14:58:07,374:INFO:Copying training dataset
2025-07-15 14:58:07,379:INFO:Defining folds
2025-07-15 14:58:07,379:INFO:Declaring metric variables
2025-07-15 14:58:07,379:INFO:Importing untrained model
2025-07-15 14:58:07,379:INFO:Decision Tree Classifier Imported successfully
2025-07-15 14:58:07,379:INFO:Starting cross validation
2025-07-15 14:58:07,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:07,870:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,876:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,880:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:07,882:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,884:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,886:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,890:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:07,890:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,890:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,892:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:07,892:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,894:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,894:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,896:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,898:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:07,898:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,900:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,902:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,902:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:07,904:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,906:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,906:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:07,910:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,910:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,916:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,919:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:07,921:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,923:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,925:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:07,927:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:07,929:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,136:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,136:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,152:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,152:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,152:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:08,152:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:08,152:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,152:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,168:INFO:Calculating mean and std
2025-07-15 14:58:08,168:INFO:Creating metrics dataframe
2025-07-15 14:58:08,168:INFO:Uploading results into container
2025-07-15 14:58:08,168:INFO:Uploading model into container now
2025-07-15 14:58:08,168:INFO:_master_model_container: 4
2025-07-15 14:58:08,168:INFO:_display_container: 2
2025-07-15 14:58:08,168:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-07-15 14:58:08,168:INFO:create_model() successfully completed......................................
2025-07-15 14:58:08,280:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:08,280:INFO:Creating metrics dataframe
2025-07-15 14:58:08,280:INFO:Initializing SVM - Linear Kernel
2025-07-15 14:58:08,280:INFO:Total runtime is 0.1937529444694519 minutes
2025-07-15 14:58:08,280:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:08,280:INFO:Initializing create_model()
2025-07-15 14:58:08,280:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:08,280:INFO:Checking exceptions
2025-07-15 14:58:08,280:INFO:Importing libraries
2025-07-15 14:58:08,280:INFO:Copying training dataset
2025-07-15 14:58:08,296:INFO:Defining folds
2025-07-15 14:58:08,296:INFO:Declaring metric variables
2025-07-15 14:58:08,296:INFO:Importing untrained model
2025-07-15 14:58:08,296:INFO:SVM - Linear Kernel Imported successfully
2025-07-15 14:58:08,296:INFO:Starting cross validation
2025-07-15 14:58:08,296:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:08,791:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,797:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,801:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:08,803:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,805:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,811:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,813:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:08,813:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,816:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,816:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,818:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,818:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,820:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,820:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,822:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:08,824:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,826:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,826:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,826:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,828:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,832:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,838:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,842:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,844:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:08,846:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,854:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,858:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:08,861:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,061:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,061:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,061:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,077:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,077:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:09,077:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:09,077:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,077:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,093:INFO:Calculating mean and std
2025-07-15 14:58:09,093:INFO:Creating metrics dataframe
2025-07-15 14:58:09,093:INFO:Uploading results into container
2025-07-15 14:58:09,093:INFO:Uploading model into container now
2025-07-15 14:58:09,093:INFO:_master_model_container: 5
2025-07-15 14:58:09,093:INFO:_display_container: 2
2025-07-15 14:58:09,093:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-15 14:58:09,093:INFO:create_model() successfully completed......................................
2025-07-15 14:58:09,211:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:09,211:INFO:Creating metrics dataframe
2025-07-15 14:58:09,211:INFO:Initializing Ridge Classifier
2025-07-15 14:58:09,211:INFO:Total runtime is 0.20925592978795368 minutes
2025-07-15 14:58:09,211:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:09,211:INFO:Initializing create_model()
2025-07-15 14:58:09,211:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:09,211:INFO:Checking exceptions
2025-07-15 14:58:09,211:INFO:Importing libraries
2025-07-15 14:58:09,211:INFO:Copying training dataset
2025-07-15 14:58:09,211:INFO:Defining folds
2025-07-15 14:58:09,211:INFO:Declaring metric variables
2025-07-15 14:58:09,211:INFO:Importing untrained model
2025-07-15 14:58:09,211:INFO:Ridge Classifier Imported successfully
2025-07-15 14:58:09,211:INFO:Starting cross validation
2025-07-15 14:58:09,227:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:09,703:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,709:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,715:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,715:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,721:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,723:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,729:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,729:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,729:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,735:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,735:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,741:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,741:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,747:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,747:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,753:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,754:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,756:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,758:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,758:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,762:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,764:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,766:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,968:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,984:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,984:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,984:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,984:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:09,984:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:10,017:INFO:Calculating mean and std
2025-07-15 14:58:10,017:INFO:Creating metrics dataframe
2025-07-15 14:58:10,021:INFO:Uploading results into container
2025-07-15 14:58:10,022:INFO:Uploading model into container now
2025-07-15 14:58:10,022:INFO:_master_model_container: 6
2025-07-15 14:58:10,022:INFO:_display_container: 2
2025-07-15 14:58:10,022:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-07-15 14:58:10,022:INFO:create_model() successfully completed......................................
2025-07-15 14:58:10,132:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:10,132:INFO:Creating metrics dataframe
2025-07-15 14:58:10,132:INFO:Initializing Random Forest Classifier
2025-07-15 14:58:10,132:INFO:Total runtime is 0.2246133248011271 minutes
2025-07-15 14:58:10,132:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:10,132:INFO:Initializing create_model()
2025-07-15 14:58:10,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:10,132:INFO:Checking exceptions
2025-07-15 14:58:10,132:INFO:Importing libraries
2025-07-15 14:58:10,132:INFO:Copying training dataset
2025-07-15 14:58:10,132:INFO:Defining folds
2025-07-15 14:58:10,132:INFO:Declaring metric variables
2025-07-15 14:58:10,132:INFO:Importing untrained model
2025-07-15 14:58:10,148:INFO:Random Forest Classifier Imported successfully
2025-07-15 14:58:10,148:INFO:Starting cross validation
2025-07-15 14:58:10,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:11,045:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,052:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,052:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,061:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,061:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,071:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,071:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,071:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,075:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,076:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,078:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,082:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,082:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,084:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,086:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,086:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,092:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,094:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,099:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,101:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,225:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,225:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,225:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,672:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,672:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,672:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,688:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,688:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:11,704:INFO:Calculating mean and std
2025-07-15 14:58:11,704:INFO:Creating metrics dataframe
2025-07-15 14:58:11,704:INFO:Uploading results into container
2025-07-15 14:58:11,704:INFO:Uploading model into container now
2025-07-15 14:58:11,704:INFO:_master_model_container: 7
2025-07-15 14:58:11,704:INFO:_display_container: 2
2025-07-15 14:58:11,704:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-07-15 14:58:11,704:INFO:create_model() successfully completed......................................
2025-07-15 14:58:11,810:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:11,810:INFO:Creating metrics dataframe
2025-07-15 14:58:11,826:INFO:Initializing Quadratic Discriminant Analysis
2025-07-15 14:58:11,826:INFO:Total runtime is 0.2528432210286458 minutes
2025-07-15 14:58:11,826:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:11,826:INFO:Initializing create_model()
2025-07-15 14:58:11,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:11,826:INFO:Checking exceptions
2025-07-15 14:58:11,826:INFO:Importing libraries
2025-07-15 14:58:11,826:INFO:Copying training dataset
2025-07-15 14:58:11,826:INFO:Defining folds
2025-07-15 14:58:11,826:INFO:Declaring metric variables
2025-07-15 14:58:11,826:INFO:Importing untrained model
2025-07-15 14:58:11,826:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-15 14:58:11,826:INFO:Starting cross validation
2025-07-15 14:58:11,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:12,195:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 14:58:12,209:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 14:58:12,224:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 14:58:12,232:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 14:58:12,234:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 14:58:12,234:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 14:58:12,256:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 14:58:12,329:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,335:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,337:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:12,339:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,342:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,346:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,349:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,350:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,356:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,357:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,364:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,367:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,367:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,368:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,371:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,373:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,373:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,374:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,375:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:12,377:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,377:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,378:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,378:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,387:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,387:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,394:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,545:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 14:58:12,545:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-15 14:58:12,622:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,622:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,626:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,626:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,626:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:12,628:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:12,628:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,630:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:12,639:INFO:Calculating mean and std
2025-07-15 14:58:12,639:INFO:Creating metrics dataframe
2025-07-15 14:58:12,639:INFO:Uploading results into container
2025-07-15 14:58:12,639:INFO:Uploading model into container now
2025-07-15 14:58:12,639:INFO:_master_model_container: 8
2025-07-15 14:58:12,639:INFO:_display_container: 2
2025-07-15 14:58:12,639:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-15 14:58:12,639:INFO:create_model() successfully completed......................................
2025-07-15 14:58:12,753:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:12,753:INFO:Creating metrics dataframe
2025-07-15 14:58:12,753:INFO:Initializing Ada Boost Classifier
2025-07-15 14:58:12,753:INFO:Total runtime is 0.2683050473531087 minutes
2025-07-15 14:58:12,753:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:12,753:INFO:Initializing create_model()
2025-07-15 14:58:12,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:12,753:INFO:Checking exceptions
2025-07-15 14:58:12,753:INFO:Importing libraries
2025-07-15 14:58:12,753:INFO:Copying training dataset
2025-07-15 14:58:12,769:INFO:Defining folds
2025-07-15 14:58:12,769:INFO:Declaring metric variables
2025-07-15 14:58:12,769:INFO:Importing untrained model
2025-07-15 14:58:12,769:INFO:Ada Boost Classifier Imported successfully
2025-07-15 14:58:12,769:INFO:Starting cross validation
2025-07-15 14:58:12,769:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:13,120:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,128:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,137:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,143:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,168:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,168:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,172:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,183:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,258:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,262:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,264:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,268:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,268:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,270:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,275:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,276:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,278:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,283:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,286:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,289:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,302:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,304:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,306:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,308:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,310:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,312:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,314:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,314:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,314:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,318:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,320:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,324:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,449:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,465:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-15 14:58:13,539:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,544:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,546:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,547:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,549:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,552:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:13,568:INFO:Calculating mean and std
2025-07-15 14:58:13,568:INFO:Creating metrics dataframe
2025-07-15 14:58:13,568:INFO:Uploading results into container
2025-07-15 14:58:13,568:INFO:Uploading model into container now
2025-07-15 14:58:13,568:INFO:_master_model_container: 9
2025-07-15 14:58:13,568:INFO:_display_container: 2
2025-07-15 14:58:13,568:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-07-15 14:58:13,568:INFO:create_model() successfully completed......................................
2025-07-15 14:58:13,674:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:13,674:INFO:Creating metrics dataframe
2025-07-15 14:58:13,690:INFO:Initializing Gradient Boosting Classifier
2025-07-15 14:58:13,690:INFO:Total runtime is 0.28392003774642943 minutes
2025-07-15 14:58:13,690:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:13,690:INFO:Initializing create_model()
2025-07-15 14:58:13,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:13,690:INFO:Checking exceptions
2025-07-15 14:58:13,690:INFO:Importing libraries
2025-07-15 14:58:13,690:INFO:Copying training dataset
2025-07-15 14:58:13,690:INFO:Defining folds
2025-07-15 14:58:13,690:INFO:Declaring metric variables
2025-07-15 14:58:13,690:INFO:Importing untrained model
2025-07-15 14:58:13,690:INFO:Gradient Boosting Classifier Imported successfully
2025-07-15 14:58:13,690:INFO:Starting cross validation
2025-07-15 14:58:13,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:14,484:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,492:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,492:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,492:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,498:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,498:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,498:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,504:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,506:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,510:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,514:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,518:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,521:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,524:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,526:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,526:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,530:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,535:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,537:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,541:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,545:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,547:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,547:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,551:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,949:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,965:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,965:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,980:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,983:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,985:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:14,996:INFO:Calculating mean and std
2025-07-15 14:58:14,996:INFO:Creating metrics dataframe
2025-07-15 14:58:14,996:INFO:Uploading results into container
2025-07-15 14:58:14,996:INFO:Uploading model into container now
2025-07-15 14:58:14,996:INFO:_master_model_container: 10
2025-07-15 14:58:14,996:INFO:_display_container: 2
2025-07-15 14:58:14,996:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-15 14:58:14,996:INFO:create_model() successfully completed......................................
2025-07-15 14:58:15,112:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:15,112:INFO:Creating metrics dataframe
2025-07-15 14:58:15,112:INFO:Initializing Linear Discriminant Analysis
2025-07-15 14:58:15,112:INFO:Total runtime is 0.30760578314463294 minutes
2025-07-15 14:58:15,112:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:15,112:INFO:Initializing create_model()
2025-07-15 14:58:15,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:15,112:INFO:Checking exceptions
2025-07-15 14:58:15,112:INFO:Importing libraries
2025-07-15 14:58:15,112:INFO:Copying training dataset
2025-07-15 14:58:15,127:INFO:Defining folds
2025-07-15 14:58:15,127:INFO:Declaring metric variables
2025-07-15 14:58:15,127:INFO:Importing untrained model
2025-07-15 14:58:15,127:INFO:Linear Discriminant Analysis Imported successfully
2025-07-15 14:58:15,127:INFO:Starting cross validation
2025-07-15 14:58:15,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:15,615:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,621:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,623:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,625:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,627:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,629:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,631:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,635:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,635:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,637:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,641:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,645:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,647:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,651:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,656:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,668:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,672:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,678:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,678:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,682:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,682:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,686:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,688:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,692:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,964:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,968:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,972:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,972:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,979:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,981:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:15,993:INFO:Calculating mean and std
2025-07-15 14:58:15,993:INFO:Creating metrics dataframe
2025-07-15 14:58:15,993:INFO:Uploading results into container
2025-07-15 14:58:15,993:INFO:Uploading model into container now
2025-07-15 14:58:15,993:INFO:_master_model_container: 11
2025-07-15 14:58:15,993:INFO:_display_container: 2
2025-07-15 14:58:15,993:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-15 14:58:15,993:INFO:create_model() successfully completed......................................
2025-07-15 14:58:16,124:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:16,124:INFO:Creating metrics dataframe
2025-07-15 14:58:16,124:INFO:Initializing Extra Trees Classifier
2025-07-15 14:58:16,124:INFO:Total runtime is 0.3244814356168111 minutes
2025-07-15 14:58:16,124:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:16,124:INFO:Initializing create_model()
2025-07-15 14:58:16,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:16,124:INFO:Checking exceptions
2025-07-15 14:58:16,124:INFO:Importing libraries
2025-07-15 14:58:16,124:INFO:Copying training dataset
2025-07-15 14:58:16,140:INFO:Defining folds
2025-07-15 14:58:16,140:INFO:Declaring metric variables
2025-07-15 14:58:16,140:INFO:Importing untrained model
2025-07-15 14:58:16,140:INFO:Extra Trees Classifier Imported successfully
2025-07-15 14:58:16,140:INFO:Starting cross validation
2025-07-15 14:58:16,140:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:17,063:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,063:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,065:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,069:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,071:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,073:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,075:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,077:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,077:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,079:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,085:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,091:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,127:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,127:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,132:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,132:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,138:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,138:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,156:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,156:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,159:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,161:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,164:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,166:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,624:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,624:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,628:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,628:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,630:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,630:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:17,650:INFO:Calculating mean and std
2025-07-15 14:58:17,650:INFO:Creating metrics dataframe
2025-07-15 14:58:17,650:INFO:Uploading results into container
2025-07-15 14:58:17,650:INFO:Uploading model into container now
2025-07-15 14:58:17,650:INFO:_master_model_container: 12
2025-07-15 14:58:17,650:INFO:_display_container: 2
2025-07-15 14:58:17,650:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-07-15 14:58:17,650:INFO:create_model() successfully completed......................................
2025-07-15 14:58:17,761:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:17,761:INFO:Creating metrics dataframe
2025-07-15 14:58:17,761:INFO:Initializing Extreme Gradient Boosting
2025-07-15 14:58:17,761:INFO:Total runtime is 0.3517682909965515 minutes
2025-07-15 14:58:17,761:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:17,761:INFO:Initializing create_model()
2025-07-15 14:58:17,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:17,761:INFO:Checking exceptions
2025-07-15 14:58:17,761:INFO:Importing libraries
2025-07-15 14:58:17,761:INFO:Copying training dataset
2025-07-15 14:58:17,777:INFO:Defining folds
2025-07-15 14:58:17,777:INFO:Declaring metric variables
2025-07-15 14:58:17,777:INFO:Importing untrained model
2025-07-15 14:58:17,777:INFO:Extreme Gradient Boosting Imported successfully
2025-07-15 14:58:17,777:INFO:Starting cross validation
2025-07-15 14:58:17,777:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:18,443:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,449:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,451:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,451:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,455:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,457:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,457:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,459:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,463:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,471:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,471:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,477:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,477:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,479:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,483:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,484:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,491:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,492:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,499:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,505:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,505:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,510:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,515:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,820:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,820:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,820:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,820:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,831:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,834:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:18,850:INFO:Calculating mean and std
2025-07-15 14:58:18,851:INFO:Creating metrics dataframe
2025-07-15 14:58:18,855:INFO:Uploading results into container
2025-07-15 14:58:18,855:INFO:Uploading model into container now
2025-07-15 14:58:18,856:INFO:_master_model_container: 13
2025-07-15 14:58:18,856:INFO:_display_container: 2
2025-07-15 14:58:18,856:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-15 14:58:18,856:INFO:create_model() successfully completed......................................
2025-07-15 14:58:18,981:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:18,981:INFO:Creating metrics dataframe
2025-07-15 14:58:18,996:INFO:Initializing Light Gradient Boosting Machine
2025-07-15 14:58:18,996:INFO:Total runtime is 0.37235153118769326 minutes
2025-07-15 14:58:18,996:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:18,996:INFO:Initializing create_model()
2025-07-15 14:58:18,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:18,996:INFO:Checking exceptions
2025-07-15 14:58:18,996:INFO:Importing libraries
2025-07-15 14:58:18,996:INFO:Copying training dataset
2025-07-15 14:58:19,012:INFO:Defining folds
2025-07-15 14:58:19,013:INFO:Declaring metric variables
2025-07-15 14:58:19,013:INFO:Importing untrained model
2025-07-15 14:58:19,014:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-15 14:58:19,014:INFO:Starting cross validation
2025-07-15 14:58:19,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:19,897:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,903:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,905:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,907:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,911:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,917:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,925:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,931:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,931:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,937:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,937:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,942:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,977:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,985:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:19,991:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,097:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,103:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,111:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,134:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,141:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,146:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,255:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,261:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,267:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,450:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,458:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,464:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,488:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,493:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,499:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:20,520:INFO:Calculating mean and std
2025-07-15 14:58:20,522:INFO:Creating metrics dataframe
2025-07-15 14:58:20,525:INFO:Uploading results into container
2025-07-15 14:58:20,526:INFO:Uploading model into container now
2025-07-15 14:58:20,526:INFO:_master_model_container: 14
2025-07-15 14:58:20,527:INFO:_display_container: 2
2025-07-15 14:58:20,528:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-15 14:58:20,528:INFO:create_model() successfully completed......................................
2025-07-15 14:58:20,669:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:20,669:INFO:Creating metrics dataframe
2025-07-15 14:58:20,669:INFO:Initializing CatBoost Classifier
2025-07-15 14:58:20,669:INFO:Total runtime is 0.40022743940353395 minutes
2025-07-15 14:58:20,669:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:20,669:INFO:Initializing create_model()
2025-07-15 14:58:20,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:20,669:INFO:Checking exceptions
2025-07-15 14:58:20,669:INFO:Importing libraries
2025-07-15 14:58:20,669:INFO:Copying training dataset
2025-07-15 14:58:20,685:INFO:Defining folds
2025-07-15 14:58:20,685:INFO:Declaring metric variables
2025-07-15 14:58:20,685:INFO:Importing untrained model
2025-07-15 14:58:20,685:INFO:CatBoost Classifier Imported successfully
2025-07-15 14:58:20,685:INFO:Starting cross validation
2025-07-15 14:58:20,685:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:31,847:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:31,856:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:31,861:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:32,817:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:32,817:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:32,817:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:32,983:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:32,983:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:32,991:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,260:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,260:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,276:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,410:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,410:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,410:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,731:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,737:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,742:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,766:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,772:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,778:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,804:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,810:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:33,816:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:37,255:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:37,258:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:37,264:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:37,465:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:37,465:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:37,478:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:37,487:INFO:Calculating mean and std
2025-07-15 14:58:37,487:INFO:Creating metrics dataframe
2025-07-15 14:58:37,487:INFO:Uploading results into container
2025-07-15 14:58:37,487:INFO:Uploading model into container now
2025-07-15 14:58:37,487:INFO:_master_model_container: 15
2025-07-15 14:58:37,487:INFO:_display_container: 2
2025-07-15 14:58:37,487:INFO:<catboost.core.CatBoostClassifier object at 0x0000027D94FC0220>
2025-07-15 14:58:37,487:INFO:create_model() successfully completed......................................
2025-07-15 14:58:37,617:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:37,617:INFO:Creating metrics dataframe
2025-07-15 14:58:37,617:INFO:Initializing Dummy Classifier
2025-07-15 14:58:37,617:INFO:Total runtime is 0.6826911727587381 minutes
2025-07-15 14:58:37,617:INFO:SubProcess create_model() called ==================================
2025-07-15 14:58:37,617:INFO:Initializing create_model()
2025-07-15 14:58:37,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D94D78190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:37,617:INFO:Checking exceptions
2025-07-15 14:58:37,617:INFO:Importing libraries
2025-07-15 14:58:37,617:INFO:Copying training dataset
2025-07-15 14:58:37,633:INFO:Defining folds
2025-07-15 14:58:37,633:INFO:Declaring metric variables
2025-07-15 14:58:37,633:INFO:Importing untrained model
2025-07-15 14:58:37,633:INFO:Dummy Classifier Imported successfully
2025-07-15 14:58:37,633:INFO:Starting cross validation
2025-07-15 14:58:37,635:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=123, shuffle=True), n_jobs=-1
2025-07-15 14:58:38,201:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,219:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,222:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,227:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,237:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,257:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,257:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,259:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,263:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,265:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,265:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,269:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,288:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,295:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,297:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,301:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,327:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,338:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,340:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,344:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,377:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,379:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,385:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,385:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,387:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,389:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,393:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,393:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,413:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,421:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,423:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,425:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,625:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,626:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,626:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,626:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,645:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,650:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,650:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-15 14:58:38,655:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-15 14:58:38,673:INFO:Calculating mean and std
2025-07-15 14:58:38,675:INFO:Creating metrics dataframe
2025-07-15 14:58:38,677:INFO:Uploading results into container
2025-07-15 14:58:38,677:INFO:Uploading model into container now
2025-07-15 14:58:38,679:INFO:_master_model_container: 16
2025-07-15 14:58:38,679:INFO:_display_container: 2
2025-07-15 14:58:38,679:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-07-15 14:58:38,679:INFO:create_model() successfully completed......................................
2025-07-15 14:58:38,805:INFO:SubProcess create_model() end ==================================
2025-07-15 14:58:38,805:INFO:Creating metrics dataframe
2025-07-15 14:58:38,808:WARNING:D:\Projet_IDEA\idea_project\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-07-15 14:58:38,808:INFO:Initializing create_model()
2025-07-15 14:58:38,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027DF258BD30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=123, shuffle=True), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-15 14:58:38,808:INFO:Checking exceptions
2025-07-15 14:58:38,808:INFO:Importing libraries
2025-07-15 14:58:38,808:INFO:Copying training dataset
2025-07-15 14:58:38,815:INFO:Defining folds
2025-07-15 14:58:38,815:INFO:Declaring metric variables
2025-07-15 14:58:38,815:INFO:Importing untrained model
2025-07-15 14:58:38,815:INFO:Declaring custom model
2025-07-15 14:58:38,815:INFO:Logistic Regression Imported successfully
2025-07-15 14:58:38,825:INFO:Cross validation set to False
2025-07-15 14:58:38,825:INFO:Fitting Model
2025-07-15 14:58:39,015:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-15 14:58:39,015:INFO:create_model() successfully completed......................................
2025-07-15 14:58:39,165:INFO:_master_model_container: 16
2025-07-15 14:58:39,165:INFO:_display_container: 2
2025-07-15 14:58:39,165:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-15 14:58:39,165:INFO:compare_models() successfully completed......................................
2025-07-15 14:58:39,237:INFO:Initializing save_model()
2025-07-15 14:58:39,237:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=models/model_attrition_fixed, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\elves\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance Fr...
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-15 14:58:39,237:INFO:Adding model into prep_pipe
2025-07-15 14:58:39,260:INFO:models/model_attrition_fixed.pkl saved in current working directory
2025-07-15 14:58:39,325:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance From Home',
                                             'Employee Count',
                                             'Environment Sati...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-15 14:58:39,325:INFO:save_model() successfully completed......................................
2025-07-15 14:59:31,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:59:31,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:59:31,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:59:31,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-15 14:59:34,248:INFO:Initializing load_model()
2025-07-15 14:59:34,264:INFO:load_model(model_name=models/model_attrition_fixed, platform=None, authentication=None, verbose=True)
2025-07-15 14:59:35,209:INFO:Initializing predict_model()
2025-07-15 14:59:35,209:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000010CA1B73DC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Employee Number',
                                             'Training Times Last Year', '-2',
                                             '0', 'Age', 'CF_current Employee',
                                             'Daily Rate', 'Distance From Home',
                                             'Employee Count',
                                             'Environment Satisfaction',
                                             'Hourly Rate', 'Job Involvement'...
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['emp no'],
                                    transformer=TargetEncoder(cols=['emp no'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000010CB8AE79A0>)
2025-07-15 14:59:35,209:INFO:Checking exceptions
2025-07-15 14:59:35,209:INFO:Preloading libraries
2025-07-15 14:59:35,209:INFO:Set up data.
2025-07-15 14:59:35,224:INFO:Set up index.
